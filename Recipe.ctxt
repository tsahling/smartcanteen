#BlueJ class context
comment0.params=
comment0.target=Recipe()
comment0.text=\n\ Standardkonstruktor\n
comment1.params=
comment1.target=boolean\ isMeatRecipe()
comment1.text=\n\ Anhand\ der\ Methode\ isMeatRecipe\ kann\ abgefragt\ werden\ ob\ es\ sich\ um\ ein\ Rezept\ f\u00FCr\ ein\ Fleischgericht\ handelt\n\ @return\ boolean\n
comment10.params=
comment10.target=int\ getRank()
comment10.text=\n\ Anhand\ der\ Methode\ getRank\ kann\ \ der\ Rang\ des\ Gericht\ aus\ der\ Hitsliste\ zu\ dem\ das\ Rezept\ geh\u00F6rt\ ermittelt\ werden\n\ @return\ Rang\ des\ Gericht\ aus\ der\ Hitliste\ zu\ dem\ das\ Rezept\ geh\u00F6rt\n
comment11.params=rank
comment11.target=void\ setRank(int)
comment11.text=\n\ Anhand\ der\ Methode\ setRank\ kann\ \ der\ Rang\ des\ Gericht\ aus\ der\ Hitsliste\ zu\ dem\ das\ Rezept\ geh\u00F6rt\ gesetzt\ werden\n\ @param\ Rang\ aus\ der\ Hitliste\ um\ den\ Rang\ zu\ setzen\n
comment12.params=
comment12.target=int\ hashCode()
comment12.text=\n\ Diese\ Methode\ gibt\ den\ HashCode-Wert\ fuer\ das\ Objekt\ zurueck,\ von\ dem\ die\ Methode\ aufgerufen\ \n\ wurde.\n\ \n\ @return\ Der\ HashCode-Wert\ des\ Objekts\ als\ int-Representation\n
comment13.params=obj
comment13.target=boolean\ equals(java.lang.Object)
comment13.text=\n\ Diese\ Methode\ prueft,\ ob\ das\ uebergebene\ Objekt\ gleich\ dem\ Objekt\ ist,\ von\ dem\ die\ Methode\ \n\ aufgerufen\ wurde.\n\ \n\ @return\ wahr/falsch,\ je\ nachdem\ ob\ zu\ vergleichende\ Objekte\ gleich\ sind\n
comment14.params=
comment14.target=java.lang.String\ toString()
comment14.text=\n\ Erstellt\ die\ String-Representation\ des\ Objekts\ {@link\ Recipe}.\n\ \n\ @return\ Die\ String-Representation\ von\ {@link\ Recipe}\n
comment2.params=
comment2.target=boolean\ isFishRecipe()
comment2.text=\n\ Anhand\ der\ Methode\ isFishRecipe\ kann\ abgefragt\ werden\ ob\ es\ sich\ um\ ein\ rezept\ f\u00FCr\ ein\ Fischgericht\ handelt\n\ @return\ boolean\n
comment3.params=
comment3.target=boolean\ isVegetableRecipe()
comment3.text=\n\ Anhand\ der\ Methode\ isVegetableRecipe\ kann\ abgefragt\ werden\ ob\ es\ sich\ um\ ein\ rezept\ f\u00FCr\ ein\ Vegetarischesgericht\ handelt\n\ @return\ boolean\n
comment4.params=
comment4.target=java.lang.String\ getName()
comment4.text=\n\ Anhand\ der\ Methode\ getName\ kann\ der\ Name\ des\ Rezept\ ermittelt\ werden\n\ @return\ R\u00FCckgabe\ des\ Rezeptnamen\n
comment5.params=name
comment5.target=void\ setName(java.lang.String)
comment5.text=\n\ Anhand\ der\ Methode\ setName\ kann\ der\ Name\ des\ Rezept\ gesetzt\ werden\n\ @param\ Name\ des\ Rezept\n
comment6.params=
comment6.target=RecipeType\ getType()
comment6.text=\n\ Anhand\ der\ Methode\ getType\ kann\ abgefragt\ werden\ um\ was\ f\u00FCr\ ein\ Rezepttyp\ (Fisch,\ Fleisch,\ Vegetarisch)\ es\ sich\ handelt\n\ @return\ Typ\ des\ Rezept\n
comment7.params=type
comment7.target=void\ setType(RecipeType)
comment7.text=\n\ Anhand\ der\ Methode\ setType\ kann\ der\ Typ\ des\ Rezept\ gesetzt\ werden\n\ @param\ type\ the\ type\ to\ set\n
comment8.params=
comment8.target=java.util.Set\ getIngredientList()
comment8.text=\n\ Anhand\ der\ Methode\ getIngredientList\ kann\ der\ die\ Inhaltsliste\ des\ Rezept\ ermittelt\ werden\n\ @return\ R\u00FCckgabe\ eines\ Collection\ welche\ die\ Inhalte\ enth\u00E4lt\n
comment9.params=ingredientList
comment9.target=void\ setIngredientList(java.util.Set)
comment9.text=\n\ Anhand\ der\ Methode\ setIngredientList\ kann\ \ die\ Inhaltsliste\ des\ Rezept\ gesetzt\ werden\n\ @param\ Inhaltsliste\ welche\ zu\ dem\ Rezept\ geh\u00F6rt\n
numComments=15
