#BlueJ class context
comment0.params=
comment0.target=Wholesaler()
comment0.text=\n\ Standardkonstruktor\n
comment1.params=
comment1.target=Wholesaler\ createProvider()
comment2.params=
comment2.target=Wholesaler\ updateProvider()
comment3.params=
comment3.target=void\ deleteProvider()
comment4.params=
comment4.target=Amount\ getTransportFee()
comment4.text=\n\ @return\ Die\ Versandkostenpauschale\ des\ Grosshaendlers\n
comment5.params=transportFee
comment5.target=void\ setTransportFee(Amount)
comment5.text=\n\ Setzt\ die\ Versandkostenpauschale\ des\ Grosshaendlers.\n\ \n\ @param\ transportFee\ Die\ zu\ setzende\ Versandkostenpauschale\ des\ Grosshaendlers\n
comment6.params=
comment6.target=int\ hashCode()
comment6.text=\n\ Diese\ Methode\ gibt\ den\ HashCode-Wert\ fuer\ das\ Objekt\ zurueck,\ von\ dem\ die\ Methode\ aufgerufen\ \n\ wurde.\n\ \n\ @return\ Der\ HashCode-Wert\ des\ Objekts\ als\ int-Representation\n
comment7.params=obj
comment7.target=boolean\ equals(java.lang.Object)
comment7.text=\n\ Diese\ Methode\ prueft,\ ob\ das\ uebergebene\ Objekt\ gleich\ dem\ Objekt\ ist,\ von\ dem\ die\ Methode\ \n\ aufgerufen\ wurde.\n\ \n\ @return\ wahr/falsch,\ je\ nachdem\ ob\ zu\ vergleichende\ Objekte\ gleich\ sind\n
comment8.params=
comment8.target=java.lang.String\ toString()
comment8.text=\n\ Erstellt\ die\ String-Representation\ des\ Objekts\ {@link\ Wholesaler}.\n\ \n\ @return\ Die\ String-Representation\ von\ {@link\ Wholesaler}\n
numComments=9
