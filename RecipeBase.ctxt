#BlueJ class context
comment0.params=
comment0.target=RecipeBase()
comment0.text=\r\n\ Konstruktor\ der\ Klasse\ Recipebase\r\n\ \ \r\n
comment1.params=recipe
comment1.target=Recipe\ addRecipe(Recipe)
comment1.text=\r\n\ Methode\ um\ ein\ Datenobjekt\ (@link\ Recipe)\ in\ das\ Set\ {@link\ recipes}\ hinzuzuf\u00FCgen.\r\n\ @param\ recipe\ Das\ einzuf\u00FCgende\ Datenobjekt\ (@link\ Recipe)\r\n\ @return\ Das\ aktualisierte\ Set\ {@link\ recipes}\r\n
comment10.params=
comment10.target=java.util.Set\ getRecipes()
comment10.text=\r\n\ Methode\ um\ alle\ Datenobjekte\ {@link\ recipes}\ aus\ dem\ Set\ {@link\ recipes}\ zu\ ermitteln\r\n\ @return\ Set\ {@link\ recipes}\r\n
comment11.params=recipes
comment11.target=void\ setRecipes(java.util.Set)
comment11.text=\r\n\ Sets\ the\ recipes.\r\n\ \r\n\ @param\ recipes\ the\ recipes\ to\ set\r\n
comment12.params=
comment12.target=java.lang.String\ toString()
comment12.text=\r\n\ Erstellt\ die\ String-Representation\ des\ Objekts\ {@link\ RecipeBase}.\r\n\ \r\n\ @return\ Die\ String-Representation\ von\ {@link\ RecipeBase}\r\n
comment2.params=recipe
comment2.target=Recipe\ updateRecipe(Recipe)
comment2.text=\r\n\ Methode\ um\ ein\ bestehendes\ Datenobjekt\ (@link\ Recipe)\ im\ Set\ {@link\ recipes}\ zu\ ver\u00E4ndern.\r\n\ @return\ Das\ aktualisierte\ Set\ {@link\ recipes}\r\n
comment3.params=recipe
comment3.target=void\ removeRecipe(Recipe)
comment3.text=\r\n\ Methode\ um\ ein\ bestehendes\ Datenobjekt\ (@link\ Recipe)\ aus\ dem\ Set\ {@link\ recipes}\ zu\ l\u00F6schen.\r\n
comment4.params=name
comment4.target=Recipe\ findRecipeByName(java.lang.String)
comment4.text=\r\n\ Methode\ um\ ein\ bestimmtes\ Datenobjekt\ (@link\ Recipe)\ in\ dem\ Set\ {@link\ recipes}\ zu\ suchen.\r\n\ @param\ name\ Name\ des\ Datenobjekt\ (@link\ Recipe)\r\n\ @return\ Das\ gefundene\ Datenobjekt\ (@link\ Recipe)\r\n
comment5.params=recipeType
comment5.target=java.util.Set\ findRecipesByRecipeType(RecipeType)
comment5.text=\r\n\ Methode\ um\ im\ Set\ {@link\ recipes}\ ein\ Datenobjekt\ (@link\ Recipe)\ anhand\ ihres\ \r\n\ Typ\ {@link\ RecipeType}\ zu\ suchen.\r\n\ @param\ recipeType\ Typ\ {@link\ RecipeType}\ \ des\ Gericht\r\n\ @return\ Set\ {@link\ Recipe}\ mit\ dem\ Inhalt\ aller\ Datenobjekte\ (@link\ Recipe)\ die\ auf\ den\ angebenen\ Typ\ {@link\ RecipeTyp}\ matchen\r\n
comment6.params=
comment6.target=java.util.Set\ getRecipesSortedByRank()
comment6.text=\r\n\ Methode\ um\ die\ Datenobjekte\ (@link\ Recipe)\ im\ Set\ {@link\ recipes}\ anhand\ des\ Rang\ {@link\ rank}\ der\ Gerichte\ {@link\ Meal}\r\n\ in\ der\ Hitliste\ {@link\ HitListBase}\ zu\ sortieren\r\n\ @return\ Set\ {@link\ recipes}\ in\ dem\ die\ Datenobjekte\ (@link\ Recipe)\ aufsteigend\ sortiert\ sind\r\n
comment7.params=rank
comment7.target=Recipe\ findRecipeByRank(int)
comment7.text=\r\n\ Methode\ um\ nach\ einem\ Datenobjekt\ (@link\ Recipe)\ eines\ Gericht\ {@link\ Meal}\ anhand\ des\ Rang\ {@link\ rank}\ in\ der\ Hitliste\ {@link\ HitListBase}\ zu\ suchen.\r\n\ @param\ rank\ Rang\ {@link\ rank}\ des\ Gericht\ {@link\ Meal}\ in\ der\ Hitliste\ {@link\ HitListBase}\r\n\ @return\ Recipe\ welches\ zu\ dem\ Gericht\ geh\u00F6rt\ welches\ den\ \u00FCbergebenden\ Rang\ in\ der\ Hitliste\ besitzt\r\n
comment8.params=
comment8.target=Recipe\ findHighestRankRecipe()
comment8.text=\r\n\ \ Methode\ um\ das\ Datenobjekt\ {@link\ Recipe}\ der\ Hitliste\ {@link\ HitListBasse}\ mit\ dem\ h\u00F6chsten\ Rang\ {@link\ rank}\ zu\ ermitteln\r\n\ @return\ Datenobjekt\ {@link\ Recipe}\ des\ beliebstesten\ Gericht\ der\ Hitliste\r\n
comment9.params=
comment9.target=Recipe\ findLowestRankRecipe()
comment9.text=\r\n\ \ Methode\ um\ das\ Datenobjekt\ {@link\ Recipe}\ der\ Hitliste\ {@link\ HitListBasse}\ mit\ dem\ niedrigsten\ Rang\ {@link\ rank}\ zu\ ermitteln\r\n\ @return\ Datenobjekt\ {@link\ Recipe}\ des\ unbeliebstesten\ Gericht\ der\ Hitliste\r\n
numComments=13
